{
    "swagger": "2.0",
    "info": {
        "description": "AI assisted learning, studying and working tool.",
        "title": "LanguHelp API",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "https://www.serdilcakmak.com",
            "email": "serdilcakmak@gmail.com"
        },
        "license": {
            "name": "Copyright of Serdil Cagin Cakmak"
        },
        "version": "0.0.1"
    },
    "host": "localhost:11242",
    "basePath": "/api/v1",
    "paths": {
        "/admin/languages": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Retrieves a list of languages that match the specified filter criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin",
                    "languages"
                ],
                "summary": "Reads languages based on filter criteria.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "alpha2Code",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "courseIds",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "userIds",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered languages",
                        "schema": {
                            "$ref": "#/definitions/pagination.PaginationResponse-entities_Language"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Accepts a payload to create a new language and returns the created language ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin",
                    "languages"
                ],
                "summary": "Creates a new language.",
                "parameters": [
                    {
                        "description": "Create Language Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/language.CreateLanguageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language ID response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Updates the details of a language based on the provided payload.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin",
                    "languages"
                ],
                "summary": "Updates an existing language.",
                "parameters": [
                    {
                        "description": "Update Language Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/language.UpdateLanguageRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated language",
                        "schema": {
                            "$ref": "#/definitions/entities.Language"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/languages/{id}": {
            "delete": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Deletes the language associated with the provided ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin",
                    "languages"
                ],
                "summary": "Deletes a language by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Language ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deletion success status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/notes": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Retrieves a list of notes that match the specified filter criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin",
                    "notes"
                ],
                "summary": "Reads notes based on filter criteria.",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "contexts",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "documents",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "languages",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "users",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered notes",
                        "schema": {
                            "$ref": "#/definitions/pagination.PaginationResponse-entities_Note"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/users": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Retrieves a list of users that match the specified filter criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "admin",
                    "users"
                ],
                "summary": "Reads users based on filter criteria.",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "courseIds",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "emailQuery",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "nameQuery",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered users",
                        "schema": {
                            "$ref": "#/definitions/pagination.PaginationResponse-entities_User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/admin/users/{id}/makeadmin": {
            "patch": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Updates the role of a user to admin using their ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "admin"
                ],
                "summary": "Promotes a user to admin status.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully promoted to admin"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/api": {
            "get": {
                "description": "serve basic html",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/html"
                ],
                "tags": [
                    "util"
                ],
                "summary": "Gets home html",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/api/healthcheck": {
            "get": {
                "description": "Get the status on Config, DB conn, Logging, Services",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "util"
                ],
                "summary": "Healthcheck",
                "responses": {
                    "200": {
                        "description": "OK"
                    }
                }
            }
        },
        "/contexts": {
            "post": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Accepts a payload to create a new context and associates it with the authenticated user if a user ID is not provided.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "contexts"
                ],
                "summary": "Creates a new context.",
                "parameters": [
                    {
                        "description": "Create Context Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/context.CreateContextRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Context ID response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/contexts/{id}": {
            "delete": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Deletes the context associated with the provided ID. Only the owner of the context or authorized actions are permitted.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "contexts"
                ],
                "summary": "Deletes a context by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Context ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deletion success status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/documents": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Fetches a list of user documents that match the specified filter criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "documents"
                ],
                "summary": "Retrieves user documents based on filter criteria.",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "contextIds",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "extension",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "location",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "noteIds",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "userIds",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered documents",
                        "schema": {
                            "$ref": "#/definitions/pagination.PaginationResponse-entities_Document"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Creates a new document associated with the authenticated user, using multipart data for file upload.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "documents"
                ],
                "summary": "Creates a user document from multipart data.",
                "parameters": [
                    {
                        "description": "Create Document Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/document.CreateDocumentMultipartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document ID",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/documents/bulk": {
            "post": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Creates multiple documents for the authenticated user, using multipart data for file uploads.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "documents"
                ],
                "summary": "Creates multiple user documents from multipart data.",
                "parameters": [
                    {
                        "description": "Create Bulk Documents Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/document.CreateDocumentsMultipartRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Bulk Document IDs",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/documents/notes": {
            "post": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Creates documents linked to a specific note, using multipart data for file uploads. The documents will be associated with the note ID.",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "documents",
                    "notes"
                ],
                "summary": "Creates note-related documents from multipart data.",
                "parameters": [
                    {
                        "description": "Create Note Documents Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/document.CreateNoteDocumentsRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Created document IDs",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/documents/{id}": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Fetches the details of a specific user document based on its ID. Only the owner of the document or authorized actions are permitted.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "documents"
                ],
                "summary": "Retrieves a user document by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Document details",
                        "schema": {
                            "$ref": "#/definitions/document.DocumentWrapped"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Deletes a specific document for the authenticated user based on document ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "documents"
                ],
                "summary": "Deletes a user document by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Document ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deletion status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/languages": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Fetches a list of languages that match the specified filter criteria.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "languages"
                ],
                "summary": "Retrieves languages based on filter criteria.",
                "parameters": [
                    {
                        "type": "string",
                        "name": "alpha2Code",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "courseIds",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "userIds",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered languages",
                        "schema": {
                            "$ref": "#/definitions/pagination.PaginationResponse-entities_Language"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/languages/{id}": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Fetches the details of a specific language based on its ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "languages"
                ],
                "summary": "Retrieves a language by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Language ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Language details",
                        "schema": {
                            "$ref": "#/definitions/entities.Language"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/login": {
            "post": {
                "description": "Handles user login requests by validating credentials and returning a token.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anon",
                    "auth"
                ],
                "summary": "Authenticates a user and generates a token.",
                "parameters": [
                    {
                        "description": "Login Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/auth.LoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Token response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notes": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Fetches a list of notes that match the specified filter criteria. Notes will only be retrieved for the authorized user.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "notes"
                ],
                "summary": "Retrieves notes based on filter criteria.",
                "parameters": [
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "contexts",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "documents",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "ids",
                        "in": "query"
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "languages",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "name": "page",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "name": "size",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "array",
                        "items": {
                            "type": "string"
                        },
                        "collectionFormat": "csv",
                        "name": "users",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Filtered notes",
                        "schema": {
                            "$ref": "#/definitions/pagination.PaginationResponse-entities_Note"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "post": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Accepts a payload to create a new note and associates it with the authenticated user if a user ID is not provided.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "notes"
                ],
                "summary": "Creates a new note.",
                "parameters": [
                    {
                        "description": "Create Note Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/note.CreateNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note ID response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "patch": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Updates the details of a specific note based on the provided payload. Only the owner of the note or authorized actions are permitted.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "notes"
                ],
                "summary": "Updates a note.",
                "parameters": [
                    {
                        "description": "Update Note Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/note.UpdateNoteRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated note details",
                        "schema": {
                            "$ref": "#/definitions/entities.Note"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/notes/{id}": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Fetches the details of a specific note based on its ID. Only the owner of the note or authorized actions are permitted.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "notes"
                ],
                "summary": "Retrieves a note by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Note ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Note details",
                        "schema": {
                            "$ref": "#/definitions/entities.Note"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Deletes the note associated with the provided ID. Only the owner of the note or authorized actions are permitted.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "notes"
                ],
                "summary": "Deletes a note by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "Note ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deletion success status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/register": {
            "post": {
                "description": "Handles user creation requests by accepting a payload and returning the created user ID.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "anon",
                    "users"
                ],
                "summary": "Creates a new user.",
                "parameters": [
                    {
                        "description": "Create User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User ID response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users": {
            "patch": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Updates the details of a user based on the provided payload. Only the user themselves or authorized actions are permitted.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "users"
                ],
                "summary": "Updates user information.",
                "parameters": [
                    {
                        "description": "Update User Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/user.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Updated user details",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Fetches details of a user based on the provided ID. Only the user themselves or authorized actions are permitted.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "users"
                ],
                "summary": "Retrieves a user by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "User details",
                        "schema": {
                            "$ref": "#/definitions/entities.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            },
            "delete": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Deletes the user associated with the provided ID. Only the user themselves or authorized actions are permitted.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "authorized",
                    "users"
                ],
                "summary": "Deletes a user by ID.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Deletion success status",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/users/{id}/make-non-admin/{role}": {
            "patch": {
                "security": [
                    {
                        "JwtAuth": []
                    }
                ],
                "description": "Updates a user’s role to a non-admin role using their ID and the new role value. Only the user themselves or authorized actions are permitted.",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "text/plain"
                ],
                "tags": [
                    "authorized",
                    "users"
                ],
                "summary": "Changes a user’s role to a non-admin role.",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "description": "New role ID",
                        "name": "role",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Successfully changed role"
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "auth.LoginRequest": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "context.CreateContextRequest": {
            "type": "object",
            "properties": {
                "languageID": {
                    "type": "string"
                },
                "userID": {
                    "type": "string"
                }
            }
        },
        "document.CreateDocumentMultipartRequest": {
            "type": "object"
        },
        "document.CreateDocumentsMultipartRequest": {
            "type": "object"
        },
        "document.CreateNoteDocumentsRequest": {
            "type": "object"
        },
        "document.DocumentWrapped": {
            "type": "object",
            "properties": {
                "contextId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isReadableByAll": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "noteId": {
                    "type": "string"
                },
                "path": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "entities.Context": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Document"
                    }
                },
                "externalId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "languageId": {
                    "type": "string"
                },
                "notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Note"
                    }
                },
                "prompts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Prompt"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "entities.Document": {
            "type": "object",
            "properties": {
                "contextId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "extension": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "isReadableByAll": {
                    "type": "boolean"
                },
                "location": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "noteId": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "entities.Language": {
            "type": "object",
            "properties": {
                "alpha2Code": {
                    "type": "string"
                },
                "alpha3Code": {
                    "type": "string"
                },
                "contexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Context"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Note"
                    }
                },
                "updatedAt": {
                    "type": "string"
                },
                "users": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.User"
                    }
                }
            }
        },
        "entities.Note": {
            "type": "object",
            "properties": {
                "contextId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Document"
                    }
                },
                "header": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "languageId": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "entities.Password": {
            "type": "object",
            "properties": {
                "createdAt": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "entities.Prompt": {
            "type": "object",
            "properties": {
                "contextId": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "entityId": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "value": {
                    "type": "string"
                }
            }
        },
        "entities.Role": {
            "type": "integer",
            "enum": [
                1,
                2
            ],
            "x-enum-varnames": [
                "Admin",
                "Customer"
            ]
        },
        "entities.User": {
            "type": "object",
            "properties": {
                "contexts": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Context"
                    }
                },
                "createdAt": {
                    "type": "string"
                },
                "documents": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Document"
                    }
                },
                "email": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "languages": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Language"
                    }
                },
                "name": {
                    "type": "string"
                },
                "notes": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Note"
                    }
                },
                "password": {
                    "$ref": "#/definitions/entities.Password"
                },
                "role": {
                    "$ref": "#/definitions/entities.Role"
                },
                "updatedAt": {
                    "type": "string"
                }
            }
        },
        "language.CreateLanguageRequest": {
            "type": "object",
            "properties": {
                "alpha2Code": {
                    "type": "string"
                },
                "alpha3Code": {
                    "type": "string"
                },
                "icon": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "language.UpdateLanguageRequest": {
            "type": "object",
            "properties": {
                "alpha2code": {
                    "type": "string"
                },
                "alpha3code": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "note.CreateNoteRequest": {
            "type": "object",
            "properties": {
                "contextId": {
                    "type": "string"
                },
                "header": {
                    "type": "string"
                },
                "languageId": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "note.UpdateNoteRequest": {
            "type": "object",
            "properties": {
                "header": {
                    "type": "string"
                },
                "id": {
                    "type": "string"
                },
                "languageId": {
                    "type": "string"
                },
                "payload": {
                    "type": "string"
                },
                "userId": {
                    "type": "string"
                }
            }
        },
        "operation.Operation": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "Insert",
                "Delete"
            ]
        },
        "pagination.PaginationResponse-entities_Document": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Document"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "pagination.PaginationResponse-entities_Language": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Language"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "pagination.PaginationResponse-entities_Note": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.Note"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "pagination.PaginationResponse-entities_User": {
            "type": "object",
            "properties": {
                "content": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/entities.User"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "size": {
                    "type": "integer"
                },
                "totalCount": {
                    "type": "integer"
                }
            }
        },
        "user.CreateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "user.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "languageOps": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "op": {
                                "$ref": "#/definitions/operation.Operation"
                            },
                            "val": {
                                "$ref": "#/definitions/entities.Language"
                            }
                        }
                    }
                },
                "name": {
                    "type": "string"
                },
                "noteOps": {
                    "type": "array",
                    "items": {
                        "type": "object",
                        "properties": {
                            "op": {
                                "$ref": "#/definitions/operation.Operation"
                            },
                            "val": {
                                "$ref": "#/definitions/entities.Note"
                            }
                        }
                    }
                }
            }
        }
    },
    "securityDefinitions": {
        "JwtAuth": {
            "description": "Bearer",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    },
    "externalDocs": {
        "description": "OpenAPI",
        "url": "https://swagger.io/resources/open-api/"
    }
}